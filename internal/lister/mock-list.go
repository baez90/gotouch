// Code generated by MockGen. DO NOT EDIT.
// Source: ./list.go

// Package lister is a generated GoMock package.
package lister

import (
	reflect "reflect"

	model "github.com/denizgursoy/gotouch/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockLister is a mock of Lister interface.
type MockLister struct {
	ctrl     *gomock.Controller
	recorder *MockListerMockRecorder
}

// MockListerMockRecorder is the mock recorder for MockLister.
type MockListerMockRecorder struct {
	mock *MockLister
}

// NewMockLister creates a new mock instance.
func NewMockLister(ctrl *gomock.Controller) *MockLister {
	mock := &MockLister{ctrl: ctrl}
	mock.recorder = &MockListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLister) EXPECT() *MockListerMockRecorder {
	return m.recorder
}

// GetDefaultProjects mocks base method.
func (m *MockLister) GetDefaultProjects() ([]*model.ProjectStructureData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDefaultProjects")
	ret0, _ := ret[0].([]*model.ProjectStructureData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDefaultProjects indicates an expected call of GetDefaultProjects.
func (mr *MockListerMockRecorder) GetDefaultProjects() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDefaultProjects", reflect.TypeOf((*MockLister)(nil).GetDefaultProjects))
}
