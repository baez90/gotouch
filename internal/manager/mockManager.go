// Code generated by MockGen. DO NOT EDIT.
// Source: ./manager.go

// Package manager is a generated GoMock package.
package manager

import (
	io "io"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockManager is a mock of Manager interface.
type MockManager struct {
	ctrl     *gomock.Controller
	recorder *MockManagerMockRecorder
}

// MockManagerMockRecorder is the mock recorder for MockManager.
type MockManagerMockRecorder struct {
	mock *MockManager
}

// NewMockManager creates a new mock instance.
func NewMockManager(ctrl *gomock.Controller) *MockManager {
	mock := &MockManager{ctrl: ctrl}
	mock.recorder = &MockManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockManager) EXPECT() *MockManagerMockRecorder {
	return m.recorder
}

// CreateDirectoryIfNotExists mocks base method.
func (m *MockManager) CreateDirectoryIfNotExists(directoryName string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDirectoryIfNotExists", directoryName)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateDirectoryIfNotExists indicates an expected call of CreateDirectoryIfNotExists.
func (mr *MockManagerMockRecorder) CreateDirectoryIfNotExists(directoryName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDirectoryIfNotExists", reflect.TypeOf((*MockManager)(nil).CreateDirectoryIfNotExists), directoryName)
}

// CreateFile mocks base method.
func (m *MockManager) CreateFile(reader io.ReadCloser, path string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFile", reader, path)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateFile indicates an expected call of CreateFile.
func (mr *MockManagerMockRecorder) CreateFile(reader, path interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFile", reflect.TypeOf((*MockManager)(nil).CreateFile), reader, path)
}

// GetExtractLocation mocks base method.
func (m *MockManager) GetExtractLocation() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExtractLocation")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetExtractLocation indicates an expected call of GetExtractLocation.
func (mr *MockManagerMockRecorder) GetExtractLocation() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExtractLocation", reflect.TypeOf((*MockManager)(nil).GetExtractLocation))
}
